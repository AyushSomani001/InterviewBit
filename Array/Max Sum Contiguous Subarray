# Max Sum Contiguous Subarray
Asked in:  Facebook, Paypal, Yahoo, Microsoft, LinkedIn, Amazon, Goldman Sachs

Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example:
Given the array [-2,1,-3,4,-1,2,1,-5,4], the contiguous subarray [4,-1,2,1] has the largest sum = 6.
For this problem, return the maximum sum.


Complete Solution:


int Solution::maxSubArray(const vector<int> &A) {
    // Do not write main() function.
    // Do not print the output, instead return values as specified.
    
    int n=A.size();
    int maximum=A[0],temp_max=A[0];
    
    for(int i=1;i<n;i++){
        //temp_max=max(temp_max+A[i],A[i]);                     
        //Use of max() function to find the maximum of two.
        
        if(A[i]>temp_max+A[i])
            temp_max=A[i];
                            
        else
            temp_max+=A[i];
      
    if(maximum<temp_max)
        maximum=temp_max;
    }
    return maximum;
}
